[buildout]
index = https://pypi.python.org/simple
develop = .
eggs = collective.mailchimp
parts +=
    instance
    test
    coverage
    test-coverage
    code-analysis
    autopep8
    pocompile
    i18ndude
    releaser
    update-translations
    find-untranslated
versions = versions

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    collective.mailchimp [test]
environment-vars = zope_i18n_compile_mo_files true

[test]
recipe = collective.xmltestreport
eggs = collective.mailchimp [test]
script = test
defaults = ['-s', 'collective.mailchimp', '--auto-color', '--auto-progress', '--xml']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/collective/mailchimp bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=80
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 80%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/
flake8-extensions =
    flake8-blind-except
    flake8-debugger

[autopep8]
recipe = zc.recipe.egg
eggs = autopep8

[pocompile]
recipe = zc.recipe.egg
eggs = zest.pocompile


[releaser]
recipe = zc.recipe.egg
eggs =
    zest.releaser
    setuptools


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[update-translations]
recipe = collective.recipe.template
input = inline:
    domain=collective.mailchimp
    maindir=src/collective/mailchimp
    locales=$maindir/locales
    echo "Update translations for $domain"
    if [ ! -f $locales/$domain.pot ]; then
        # Create .pot file if it does not exist yet
        touch $locales/$domain.pot
    fi
    if [ ! -f $locales/de/LC_MESSAGES ]; then
        # Create de/LC_MESSAGES directory if it does not exist yet
        mkdir -p $locales/de/LC_MESSAGES
    fi
    if [ ! -f $locales/de/LC_MESSAGES/$domain.po ]; then
        # Create .po file if it does not exist yet
        touch $locales/de/LC_MESSAGES/$domain.po
    fi
    ${buildout:directory}/bin/i18ndude rebuild-pot --pot $locales/$domain.pot --create $domain $maindir
    ${buildout:directory}/bin/i18ndude sync --pot $locales/$domain.pot $locales/*/LC_MESSAGES/$domain.po
output = ${buildout:directory}/bin/updatetranslations
mode = 755


[find-untranslated]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/i18ndude find-untranslated `find -L src/collective/mailchimp -regex ".*\.[cz]?pt"`
output = ${buildout:directory}/bin/find-untranslated
mode = 755
